# -*- coding: utf-8 -*-
"""michelin.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k9qXQ-0_R1dpYODLOzlx5Gk80TrbsHwv
"""

import pandas as pd
import streamlit as st
import folium
import os
#from geopy.geocoders import GoogleV3

# Load the CSV file of Michelin Restaurants
mg_csv = 'mg.csv'
df = pd.read_csv(mg_csv)

# Streamlit app
st.title("Restaurant Week 2024 in DMV")

# Filter by cuisine
cuisine_options = sorted(df['Cuisine'].unique())
selected_cuisine = st.sidebar.selectbox("Select Cuisine:", ["All"] + cuisine_options)
if selected_cuisine != "All":
    df = df[df['Cuisine'] == selected_cuisine]

# Filter by award
award_options = sorted(df['Award'].unique())
selected_award = st.sidebar.selectbox("Select Award:", ["All"] + award_options)
if selected_award != "All":
    df = df[df['Award'] == selected_award]

# Removing api access due to costs

# Initialize the Google Maps geocoder
#api_key = os.getenv("api_key")
#geolocator = GoogleV3(api_key)  # Replace with your Google Maps API key

# Geocode addresses and add coordinates to the DataFrame
#def geocode_address(address):
#    location = geolocator.geocode(address)
#    if location:
#        return f"({location.latitude}, {location.longitude})"
#    else:
#        return None

#df['Coordinates'] = df['Address'].apply(geocode_address)

# Filter by Restaurant Week 2024 participation
restaurant_week_options = ['All', 'Yes', 'No']
selected_participation = st.sidebar.selectbox("Participating in Restaurant Week 2024:", restaurant_week_options)
if selected_participation != 'All':
    df = df[df['Restaurant Week 2024'].str.lower() == selected_participation.lower()]

# Display the filtered data
st.write("Filtered Restaurants:")
st.write(df)

# Display the map with restaurant locations # commenting out the code with folium
#if not df.empty:
#    st.write("Restaurant Locations on Map:")
#    my_map = folium.Map(location=[38.9007, -77.0219], zoom_start=11)
#
#    for index, row in df.iterrows():
#        if row['Coordinates']:
#            folium.Marker(eval(row['Coordinates']), popup=row['Name']).add_to(my_map)
#
#    st.write(my_map)
#else:
#    st.warning("No restaurants match the selected criteria.")

# Display the map with restaurant locations
#if not df.empty:
#    st.write("Restaurant Locations on Map:")
    
    # Extract latitudes and longitudes from the 'Coordinates' column
#    df['LATITUDE'] = df['Coordinates'].apply(lambda x: eval(x)[0] if pd.notnull(x) else None)
#    df['LONGITUDE'] = df['Coordinates'].apply(lambda x: eval(x)[1] if pd.notnull(x) else None)
    
    # Filter out rows with missing coordinates
#    df = df.dropna(subset=['LATITUDE', 'LONGITUDE'])

    # Display the map using st.map()
#    st.map(df)
#else:
#    st.warning("No restaurants match the selected criteria.")

